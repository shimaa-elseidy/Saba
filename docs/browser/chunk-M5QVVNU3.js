import{g}from"./chunk-JKYV32XC.js";import{a as u}from"./chunk-SLPUACWX.js";import{a as s,c}from"./chunk-Q5MV2RZV.js";import{C as o,T as h,Y as m,ba as p,n as i}from"./chunk-FHROAHAP.js";var E=(()=>{class l{constructor(t,e){this.http=t,this.router=e,this.baseUrl=u.apiUrl,this.baseUrlDash=u.apiUlrDashboard}isLoggedIn(){return!!localStorage.getItem("token")}fetchInvoices(){let t=this.getToken();if(!t)return i(()=>new Error("User is not authenticated."));let e=new s({Authorization:`Bearer ${t}`});return this.http.get(`${this.baseUrl}/Invoice/my-invoices`,{headers:e}).pipe(o(this.handleError))}fetchWallet(){let t=this.getToken();if(!t)return i(()=>new Error("User is not authenticated."));let e=new s({Authorization:`Bearer ${t}`});return this.http.get(`${this.baseUrl}/Wallet/my-wallet`,{headers:e}).pipe(o(this.handleError))}fetchBooking(){let t=this.getToken();if(!t)return i(()=>new Error("User is not authenticated."));let e=new s({Authorization:`Bearer ${t}`});return this.http.get(`${this.baseUrl}/TourBooking/my-bookings`,{headers:e}).pipe(o(this.handleError))}fetchComments(){let t=this.getToken();if(!t)return i(()=>new Error("User is not authenticated."));let e=new s({Authorization:`Bearer ${t}`});return this.http.get(`${this.baseUrl}/comments/my-comments`,{headers:e}).pipe(o(this.handleError))}deleteCommentById(t){return this.http.delete(`${this.baseUrl}/comments/delete-my-comment/${t}`)}register(t){let e=new s({"Content-Type":"application/json"});return this.http.post(`${this.baseUrl}/Auth/register`,t,{headers:e}).pipe(h(r=>{r?.token&&(localStorage.setItem("token",r.token),r.userData&&(localStorage.setItem("userData",JSON.stringify(r.userData)),r.userData.profileImage?localStorage.setItem("profileImage",r.userData.profileImage):localStorage.setItem("profileImage","assets/default-profile.png")))}),o(this.handleError))}login(t,e){let r=new FormData;return r.append("Email",t),r.append("Password",e),this.http.post(`${this.baseUrl}/Auth/login`,r).pipe(h(a=>{a?.token&&(localStorage.setItem("token",a.token),a.userData&&(localStorage.setItem("userData",JSON.stringify(a.userData)),a.userData.profileImage?localStorage.setItem("profileImage",a.userData.profileImage):localStorage.setItem("profileImage","assets/default-profile.png")))}),o(this.handleError))}getToken(){return localStorage.getItem("token")}getUserRole(){let t=this.getUserData();return t?t.roleId:null}getUserData(){let t=localStorage.getItem("userData");return t?JSON.parse(t):null}isAdmin(){return this.getUserRole()===1}isUser(){return this.getUserRole()===3}isEmployee(){return this.getUserRole()===2}isSuperAdmin(){return this.getUserRole()===4}isAuthenticated(){return!!this.getToken()}logout(){localStorage.removeItem("token"),localStorage.removeItem("userData"),localStorage.removeItem("profileImage"),this.router.navigate(["/login"])}handleError(t){return console.error("\u274C Error:",t),i(()=>new Error(" Please Try Again Later "))}verifyOtp(t,e){let r=new FormData;return r.append("Email",t),r.append("Otp",e),this.http.post(`${this.baseUrl}/Auth/verify-otp`,r).pipe(o(this.handleError))}resendOtp(t){let e=new FormData;return e.append("Email",t),this.http.post(`${this.baseUrl}/Auth/resend-otp`,e).pipe(o(this.handleError))}updateProfile(t){let e=new s({Authorization:`Bearer ${localStorage.getItem("token")}`,"Content-Type":"application/json"});return this.http.put(`${this.baseUrl}/Auth/update-profile`,t,{headers:e}).pipe(h(r=>{r?.userData?.profileImage&&localStorage.setItem("profileImage",r.userData.profileImage)}),o(this.handleError))}changePassword(t,e,r){let a=new s({Authorization:`Bearer ${localStorage.getItem("token")}`}),n=new FormData;return n.append("OldPassword",t),n.append("NewPassword",e),n.append("ConfirmNewPassword",r),this.http.put(`${this.baseUrl}/Auth/change-password`,n,{headers:a})}getEmails(){return this.http.get(`${this.baseUrl}/Auth/All-Emails`)}forgotPassword(t){let e=new s({"Content-Type":"application/json"}),r={email:t};return this.http.post(`${this.baseUrl}/Auth/forgot-password`,r,{headers:e}).pipe(o(this.handleError))}resetPassword(t,e,r){let a=new s({"Content-Type":"application/json"}),n={email:t,otp:e,newPassword:r};return this.http.post(`${this.baseUrl}/Auth/reset-password`,n,{headers:a}).pipe(o(this.handleError))}static{this.\u0275fac=function(e){return new(e||l)(p(c),p(g))}}static{this.\u0275prov=m({token:l,factory:l.\u0275fac,providedIn:"root"})}}return l})();export{E as a};
